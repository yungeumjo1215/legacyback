# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
  
          # Clean up disk space before the build
      - name: Clean Up Disk Space Before Build
        run: |
          sudo apt-get clean
          sudo rm -rf /tmp/*
          sudo rm -rf ~/.cache/pip
  
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: |
          touch .env
          echo "${{ secrets.PROD_ENV_FILE }}" > .env

      # Install Miniconda
      - name: Install Miniconda
        run: |
          if [ ! -d "$HOME/miniconda" ]; then
            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
            bash miniconda.sh -b -p $HOME/miniconda
          else
            echo "Miniconda is already installed. Skipping installation."
          fi
          eval "$($HOME/miniconda/bin/conda shell.bash hook)"
          conda init
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda

      # Create and activate Conda environment
      - name: Cache Conda Environment
        uses: actions/cache@v3
        with:
          path: ~/miniconda/envs/myenv
          key: ${{ runner.os }}-conda-${{ matrix.node-version }}-${{ hashFiles('environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-

      # Install Python dependencies (if you have a requirements.txt file)
      - name: Install Python dependencies
        run: |
          eval "$($HOME/miniconda/bin/conda shell.bash hook)"
          conda activate myenv
          if [ -f requirements.txt ]; then
            conda install pip  # pip 설치
            pip install -r requirements.txt
          else
            echo "requirements.txt not found. Skipping pip installation."
          fi

